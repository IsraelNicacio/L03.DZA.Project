name: Build Project
run-name: Build ${{ github.repository }} by ${{ github.actor }}

on:
    push:
        branches:
          - master
    pull_request:
        branches:
          - master
    workflow_dispatch:

concurrency:
    group: ${{github.workflow}}-${{github.ref}}
    cancel-in-progress: true

jobs:

    versionamento:
        runs-on: ubuntu-latest
        name: versionamento
        permissions:
          contents: write

        outputs:
          version: ${{ steps.version.outputs.version }}

        steps:
          - name: Checkout code
            uses: actions/checkout@v4
            with:
              ref: ${{ github.head_ref }}
              fetch-depth: 0

          - uses: codacy/git-version@2.8.0
            id: version
            with:
              release-branch: master
              prefix: v

          - name: Tag the repository
            env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            run: |
              echo "::notice:: ${{ steps.version.outputs.version }}"
              git config --global user.email "${{ github.actor }}@users.noreply.github.com"
              git config --global user.name "${{ github.actor }}"
              git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
              git push --tags
            if: github.ref == 'refs/heads/master'

    backend-buils-and-tests:
        needs: versionamento
        runs-on: ubuntu-latest
        name: Backend Buil and Test

        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Setup .Net Core
            uses: actions/setup-dotnet@v4
            with:
              dotnet-version: '8.x'

          - name: Restore Packages
            run: | 
              dotnet restore ./L03.DZA.Project.sln --locked-mode

          - name: Build Project
            run: | 
                dotnet build --configuration release --no-restore ./L03.DZA.Project.sln

          - name: Test Project
            run: | 
                 dotnet test ./L03.DZA.Project.sln --configuration release --no-restore --no-build --logger trx --results-directory "TestResults"
            if: github.ref == 'refs/heads/master'
          
          - uses: actions/upload-artifact@v4
            with:
              name: dotnet-test-results
              path: TestResults
            if: github.ref != 'refs/heads/master'

          - name: Publish
            run: dotnet publish ./src/Cadastro/DZA.Cadastro.Api/DZA.Cadastro.Api.csproj --no-restore --no-build --configuration Release --output ./publish
            if: github.ref != 'refs/heads/master'
                
          - name: Tag published version
            uses: restackio/update-json-file-action@2.1
            with:
              file: ./publish/appsettings.json
              fields: "{\"MY_APP_VERSION\": \"${{ needs.versioning.outputs.version }}\"}"
        
          - name: Upload dotnet artifacts
            uses: actions/upload-artifact@v4
            with:
              name: api
              path: ./publish
            if: github.ref == 'refs/heads/master'

    backend-lint:
      needs: versionamento
      runs-on: ubuntu-latest
      name: Backend Lint

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            # super-linter needs the full git history to get the
            # list of files that changed across commits
            fetch-depth: 0

        - uses: github/super-linter@v6
          env:
            DEFAULT_BRANCH: "master"
            VALIDATE_ALL_CODEBASE: "false"
            VALIDATE_YAML: "true"
            VALIDATE_CSHARP: "true"
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.ref != 'refs/heads/master'    


    frontend-build-and-test:
        if: false
        needs: versionamento
        runs-on: ubuntu-latest
        name: Frontend Build and Test
        defaults:
          run:
            working-directory: ./src/web

        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Set up Node.js
            uses: actions/setup-node@v4
            with:
              node-version: "20.x"
              cache: npm
              cache-dependency-path: ./src/web

          - name: Install Dependencies
            run: |
                npm ci
      
          - name: Test
            run: |
              npm run lint
            if: github.ref != 'refs/heads/master'
      
          - name: Build
            run: |
              npm run build

          - name: Upload Frontend artifacts
            uses: actions/upload-artifact@v4
            with:
              name: web
              path: ./src/web/dist
            if: github.ref == 'refs/heads/master'
    
    dependency-check:
      needs: versionamento
      runs-on: ubuntu-latest
      permissions:
        contents: read
        pull-requests: write

      steps:
        - uses: actions/checkout@v4

        - uses: actions/dependency-review-action@v4
          with:
            comment-summary-in-pr: always
            base-ref: master
            head-ref: master
      if: github.ref != 'refs/heads/master'
    
    code-security-check:
      needs: versionamento
      name: Analyze (${{ matrix.language }})
      runs-on: ubuntu-latest
      permissions:
        security-events: write
        packages: read
        actions: read
        contents: read

      strategy:
        fail-fast: false
        matrix:
          include:
            - name: Backend
              language: csharp
              build-mode: autobuild
            - name: Frontend
              language: javascript-typescript
              build-mode: none

      steps:
        - uses: actions/checkout@v4
        
        - uses: github/codeql-action/init@v3
          name: Initialize CodeQL - ${{ matrix.name }}
          with:
            languages: ${{ matrix.language }}
            build-mode: ${{ matrix.build-mode}}
        
        - uses: github/codeql-action/analyze@v3
          name: Analize code
          with:
            category: "/language:${{ matrix.language }}"
      if: github.ref != 'refs/heads/master'

    build-docker-image:
      needs: [versionamento, backend-buils-and-tests]
      name: Docker
      runs-on: ubuntu-latest
      env:
        version: ${{ needs.versionamento.outputs.version }}

      steps:
        - uses: actions/checkout@v4

        - uses: actions/download-artifact@v4
          with:
            path: app
            merge-multiple: false

        - name: Build Docker Image
          run: |
            docker build -t ${{ vars.DOCKERHUB_ACCOUNT_ID }}/minha-app3:${{ env.version }} ./src/

        - name: Tag Docker image as Latest
          run: |
              docker tag ${{ github.repository }}:${{ env.version }} ${{ github.repository }}:latest
          if: github.ref == 'refs/heads/master'

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with: 
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASS }}

        - name: Docker Push
          run: docker push --all-tags ${{ vars.DOCKERHUB_ACCOUNT_ID }}/minha-app3